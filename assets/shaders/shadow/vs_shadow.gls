#version 440

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

#include "sh_shadow.gls"
#include "../modules/vs_weighted.gls"
#include "../modules/sh_entity_info.gls"
#include "../modules/vs_instanced_entity_data.gls"

// Unused, but required for correct binding points in OpenGL
#include "../modules/vs_vertex_animation_frame_data.gls"
#include "../modules/sh_material.gls"
#include "../modules/sh_camera_info.gls"
#include "../modules/sh_rendersettings.gls"

layout(location = SHADER_VERTEX_BUFFER_LOCATION) in vec3 u_vert_pos;

void main()
{
	mat4 mBone = calc_bone_matrix(is_instanced_weighted(),is_weighted_ext());
	vec4 vpos = mBone *vec4(u_vert_pos,1.0);

	gl_Position = API_DEPTH_TRANSFORM(u_pushConstants.depthMVP *get_instanced_model_matrix()) *vpos;

	vec4 vposWs = get_instanced_model_matrix() *vpos;
	vposWs.xyz /= vposWs.w;
	vposWs.w = 1.0;

	vs_out.vert_pos_ws = vposWs.xyz;
	vs_out.light_pos_ws = u_pushConstants.lightPos;
}
