#version 440

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

#include "/modules/vs_buffer_locations.gls"

layout(location = SHADER_VERTEX_BUFFER_LOCATION) in vec3 in_vert_pos;
layout(location = SHADER_UV_BUFFER_LOCATION) in vec2 in_vert_uv;
layout(location = SHADER_NORMAL_BUFFER_LOCATION) in vec3 in_vert_normal;
layout(location = SHADER_NORMAL_TANGENT_BUFFER_LOCATION) in vec3 in_vert_tangent;
layout(location = SHADER_NORMAL_BITANGENT_BUFFER_LOCATION) in vec3 in_vert_bitangent;

layout(location = 0) out vec2 vs_vert_uv;

#define SHADER_UNIFORM_CAMERA_SET 0
#define SHADER_UNIFORM_CAMERA_BINDING 0

#include "/modules/sh_camera_info.gls"

void main()
{
	gl_Position = u_camera.P *u_camera.V *vec4(in_vert_pos,1.0);
	vs_vert_uv = in_vert_uv;
}
