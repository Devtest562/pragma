#version 440

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

layout(location = 0) in vec2 vs_vert_uv;
/*
#define Test(set,binding) layout(std140, Test(0,2)) uniform
// LAYOUT_BINDING


layout(std140,set = SHADER_UNIFORM_FOG_SET,binding = SHADER_UNIFORM_FOG_BINDING) uniform UFog
{
	Fog fog;
} u_fog;
layout(set = SHADER_UNIFORM_DIFFUSE_MAP_SET,binding = SHADER_UNIFORM_DIFFUSE_MAP_BINDING) uniform sampler2D u_diffuseMap;


*/
//layout(LAYOUT_ID(0,0)) uniform sampler2D u_texture;
//layout(LAYOUT_ID(0,1)) uniform sampler2D u_texture2;
layout(std140, LAYOUT_ID(0,2)) uniform PushConstants {
	vec4 color;
} u_pushConstants;

//layout(LAYOUT_ID(1,0)) uniform sampler2D u_texture3;
//layout(LAYOUT_ID(1,1)) uniform sampler2D u_texture4;

layout(location = 0) out vec4 fs_color;




layout(std140, LAYOUT_PUSH_CONSTANTS()) uniform PushConstants2 {
	vec4 color;
} u_pushConstants2;

void main()
{
	/*if(vs_vert_uv.y < 0.25)
		fs_color = texture(u_texture,vs_vert_uv).rgba;
	else if(vs_vert_uv.y < 0.5)
		fs_color = texture(u_texture2,vs_vert_uv).rgba;
	else if(vs_vert_uv.y < 0.75)
		fs_color = texture(u_texture3,vs_vert_uv).rgba;
	else if(vs_vert_uv.y <= 1.0)
		fs_color = texture(u_texture4,vs_vert_uv).rgba;*/
	fs_color = vec4(1,1,0,1);
	//gl_FragDepth = 0.5;
	gl_FragDepth = (gl_FragCoord.z / gl_FragCoord.w) /1000;
	//fs_color = u_pushConstants2.color;
}
